/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.grafoproyecto;
import javax.swing.*;
import java.awt.*;
import org.jgrapht.Graph;
import org.jgrapht.graph.DefaultDirectedGraph;
import org.jgrapht.graph.DefaultEdge;
/**
 *
 * @author samir
 */
public class VisualGrafo extends javax.swing.JFrame {
      // 1. Añade una variable para guardar el objeto Grafo
    private Grafo grafo;

    // 2. Modifica el constructor para aceptar el objeto Grafo
    public VisualGrafo(Grafo grafo) {
        this.grafo = grafo; // Guarda el grafo en la variable de clase
        initComponents();
        
        // 3. Llama a tu nuevo método de inicialización de la visualización
        inicializarVisualizacion(); 
    }
    
    // 4. (Nuevo Método) Aquí es donde irá la lógica de dibujo
    private void inicializarVisualizacion() {
        // Por ahora, solo añade un mensaje temporal, 
        // hasta que instalemos JGraphX para el dibujo real.
         // 1. Mapear tu objeto 'Grafo' (personal) a la estructura de JGraphT
        ListenableGraph<String, DefaultEdge> g = new DefaultListenableGraph<>(
        new DefaultDirectedGraph<>(DefaultEdge.class)
    );

    // **********************************************
    // LÓGICA DE CONVERSIÓN
    // **********************************************
    
    // 1. Añadir Nodos (Usuarios)
    // ***AJUSTAR: Reemplaza 'getUsuarios()' con el método real de tu Grafo***
    for (Usuario u : this.grafo.getUsuarios()) { 
        // El nombre del nodo en JGraphT será el ID o nombre del usuario
        // ***AJUSTAR: Reemplaza 'getNombre()' con el método real del Usuario***
        g.addVertex(u.getNombre()); 
    } 

    // 2. Añadir Aristas (Relaciones)
    // Itera sobre todos los usuarios para encontrar sus vecinos.
    // ***AJUSTAR: Reemplaza 'getUsuarios()' con el método real de tu Grafo***
    for (Usuario origen : this.grafo.getUsuarios()) { 
        
        // ***AJUSTAR: Reemplaza 'getRelaciones(origen)' con el método que te da los vecinos***
        for (Usuario destino : this.grafo.getRelaciones(origen)) { 
            
            // Si la arista no existe, la añade
            // ***AJUSTAR: Reemplaza 'getNombre()' con el método real del Usuario***
            g.addEdge(origen.getNombre(), destino.getNombre()); 
        }
    }
    
    // **********************************************
    
    // ... Resto del código de JGraphX (NO CAMBIAR) ...
    
    JGraphXAdapter<String, DefaultEdge> graphAdapter = new JGraphXAdapter<>(g);
    mxGraphComponent graphComponent = new mxGraphComponent(graphAdapter);
    
    
    }
    /**
     * Creates new form VISUALGRAFO
     */
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VisualGrafo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VisualGrafo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VisualGrafo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VisualGrafo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VisualGrafo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
